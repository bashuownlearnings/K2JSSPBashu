!function(){function e(e){const t=[{id:1,name:"India",cont:"ASIA"},{id:2,name:"Australia",cont:"ASIA"},{id:3,name:"England",cont:"Europe"},{id:4,name:"South Africa",cont:"Africa"}];let n;return e>1&&null!=e&&null!=e?(t.forEach((function(t){t.id==e&&(n={id:t.id,name:t.name,cont:t.cont})})),n):t}metadata={systemName:"com.k2.icc",displayName:"International Cricket Council",description:"A Test Custom Broker to retreive details of ICC, you can browse details of cricket teams associated with ICC.",configuration:{typeOfSource:{displayName:"Typeof Source",type:"string",value:"Teams"}}},ondescribe=async function({configuration:e}){postSchema({objects:{teams:{displayName:"Cricket Teams",description:"Internation Cricket Teams associated with ICC",properties:{id:{displayName:"ID",type:"number"},name:{displayName:"Name",type:"string"},continent:{displayName:"Continent",type:"string"}},methods:{getTeams:{displayName:"Get Teams",type:"list",outputs:["id","name","continent"]}}}}})},onexecute=async function({objectName:t,methodName:n,parameters:a,properties:i,configuration:o}){switch(t){case"teams":await async function(t,n,a,i){switch(t){case"getTeams":await async function(t,n,a){return new Promise((t,a)=>{let i=e(n.id);try{postResult(i.map(e=>({id:e.id,name:e.name,continent:e.cont}))),t()}catch(e){a(e)}})}(0,n);break;case"getTeamsById":await async function(t,n,a){return new Promise((t,a)=>{let i=e(n.id);try{postResult({id:i.id,name:i.name,continent:i.cont}),t()}catch(e){a(e)}})}(0,n);break;default:throw new Error("The method "+t+" is not supported.")}}(n,i);break;default:throw new Error("The object "+t+" is not supported.")}}}();
//# sourceMappingURL=index.js.map
